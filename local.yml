---
- name: Update APT cache and perform system upgrades
  hosts: localhost
  become: true
  tasks:
    - name: Update / upgrade
      apt:
        update_cache: yes
        upgrade: yes
      changed_when: false

- name: Configure ansible-pull schedule
  hosts: localhost
  become: true

  vars:
    # Schedule is fed directly to cron
    schedule: '*/15'

    # User to run ansible-pull as from cron
    cron_user: root

    # File that ansible will use for logs
    logfile: /var/log/ansible-pull.log

    # Directory to where the repository will be cloned
    workdir: /var/lib/ansible/local

    # Repository to check out
    # repo must contain a local.yml file at the top level
    repo_url: https://github.com/jesseblacketter/vmboot.git

  tasks:
    - name: Create local directory to work from
      file:
        path: "{{ workdir }}"
        state: directory
        owner: root
        group: root
        mode: '0751'
    - name: Schedules ansible-pull to retrieve playbook updates
      ansible.builtin.cron:
        name: ansible-pull
        minute: "{{ schedule }}"
        user: root
        job: "ansible-pull -d {{ workdir }} -U {{ repo_url }} >>{{ logfile }} 2>&1"
        cron_file: ansible-pull
    - name: Create logrotate entry for ansible-pull.log
      template:
        src: templates/etc_logrotate.d_ansible-pull.j2
        dest: /etc/logrotate.d/ansible-pull
        owner: root
        group: root
        mode: '0644'

- name: Setup SonarQube Server
  hosts: localhost
  become: yes

  vars:
    sonarqube_install_location: "/opt/sonarqube"
    sonarqube_version: "1.0.1"
    # Package dependencies with pinned versions
    sonarqube_dependencies:
      - name: "unzip={{ unzip_version }}"
      - name: "openjdk-17-jdk={{ openjdk_version }}"
      - name: "postgresql-client-common={{ postgresql_version }}"
    unzip_version: "6*"
    openjdk_version: "17*"
    postgresql_version: "238"

  tasks:
    - name: Install dependencies
      apt:
        name: "{{ sonarqube_dependencies }}"
        state: present
        update_cache: yes
    - name: Hold SonarQube dependencies at specified version
      dpkg_selection:
        package: "{{ sonarqube_dependencies }}"
        selection: "hold"
        allow_change_held_packages: yes
        allow_downgrade: yes
    - name: Update APT cache and perform system upgrades
      apt:
        upgrade: yes
    - name: Manage data disk
      parted:
        device: /dev/sdb
        label: gpt
        name: primary
        state: present
        part_start: 0%
        part_end: 100%
    - name: Partprobe to inform kernel
      command: partprobe /dev/sdb
    - name: Create filesystem on the partition
      filesystem:
        fstype: ext4
        dev: /dev/sdb1
    - name: Create SonarQube installation directory
      file:
        path: "{{ sonarqube_install_location }}"
        state: directory
        mode: '0777'
    - name: Mount the data disk to SonarQube installation directory
      mount:
        path: "{{ sonarqube_install_location }}"
        src: /dev/sdb1
        fstype: ext4
        state: mounted
        opts: defaults,nofail
    - name: Add fstab entry for the data disk
      lineinfile:
        path: /etc/fstab
        line: "/dev/sdb1 {{ sonarqube_install_location }} ext4 defaults,nofail 0 2"
    - name: Baseline updates
      lineinfile:
        path: /etc/needrestart/conf.d/auto-restart.conf
        line: '$nrconf{restart} = "a";'
    - name: Install SonarQube
      shell: |
        cd {{ sonarqube_install_location }}
        wget -O sonarqube.zip https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip
        unzip sonarqube.zip
        mv sonarqube-{{ sonarqube_version }} sonarqube
        rm sonarqube.zip
    - name: Increase Limits
      lineinfile:
        path: "{{ item.path }}"
        line: "{{ item.line }}"
      loop:
        - { path: '/etc/security/limits.conf', line: 'sonarqube  -  nofile  65536' }
        - { path: '/etc/security/limits.conf', line: 'sonarqube  -  nproc   4096' }
        - { path: '/etc/sysctl.conf', line: 'vm.max_map_count = 262144' }
    - name: Reboot (to enable new limits)
      command: shutdown -r +1 "System will reboot in 1 minute"
      async: 0
      poll: 0
      register: reboot_result
      changed_when: false
      when: sonarqube_reboot_required